"" Call pathogen before everything else.
filetype off
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

set nocompatible       " Use Vim defaults instead of 100% vi compatibility
set autoindent         " Auto indent new lines
set smartindent        " Make autoindent smarter
set smarttab           " Proper indenting with <Tab>
set autowrite          " Automatically save before commands like :next and :make
set backspace=indent,eol,start " more powerful backspacing
set cursorline         " Highlight current line
set foldmethod=syntax
set foldlevel=99
set hidden             " Hide buffers when they are abandoned
set history=50         " keep 50 lines of command line history
set smartcase          " Do smart case matching when searching
set incsearch          " Incremental search
set list               " Show invisibles
set listchars=tab:▸\ ,eol:¬
set mouse=a            " Enable mouse usage (all modes) in terminals
set ruler              " show the cursor position all the time
set scrolloff=3        " Never lean to the top or bottom of the window
set showcmd            " Show (partial) command in status line.
set showmatch          " Show matching brackets.
set softtabstop=4 tabstop=4 shiftwidth=4 expandtab " Default whitespace settings
set viminfo='20,\"50   " read/write a .viminfo file, don't store more than 50 lines of registers
set wildmenu           " Enhanced command-line completion.
set wildmode=list:longest " Show all alternatives and complete furtherest possible.
set backupdir=~/.vim/backup
set directory=~/.vim/backup
if version >= 703
    set colorcolumn=80     " Vertical line on column 80
    set undofile           " Persistent undo history
    set undodir=~/.vim/backup
endif

set background=dark
colorscheme desert

highlight ColorColumn ctermbg=red guibg=red


syntax on                  " Use syntax highlighting
filetype plugin indent on  " Enables filetype specific stuff

source $HOME/.vim/pkoch/autohighlight.vim
source $HOME/.vim/pkoch/python.vim

nnoremap <leader>g :GundoToggle<CR>

nnoremap <leader>n :NERDTreeToggle<CR>
let NERDTreeIgnore=['\.pyc$', '\.rbc$', '\~$']

highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWritePre * :%s/\s\+$//e

let macvim_hig_shift_movement = 1

nnoremap <leader>t :TlistToggle<CR>

autocmd CursorHoldI * stopinsert " Use open mode, you rascal

let g:Tb_MapWindowNavVim = 1
let g:Tb_MapWindowNavArrows = 1
let g:Tb_MapCTabSwitchBufs = 1
let g:Tb_ModSelTarget = 1

let g:pyflakes_use_quickfix = 0

""""""""  wyw.dcweb.cn/vim/.vimrc.html  """"""""
set statusline=%<%f\ %h%m%r%=%k[%{(&fenc==\"\")?&enc:&fenc}%{(&bomb?\",BOM\":\"\")}]\ %-14.(%l,%c%V%)\ %P ""Eu não percebo bem o q isto faz, mas ok

" Highlight space errors in C/C++ source files (Vim tip #935)
let c_space_errors=1

" Como sugerido pelo Ademar, como implementado neste url
au FileType ruby setlocal expandtab tabstop=2 shiftwidth=2

"""""""""""""""""  debian.vim  """""""""""""""""

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,.pyo,.pyc,.rbc

if has("autocmd")
 " Enabled file type detection
 " Use the default filetype settings. If you also want to load indent files
 " to automatically do language-dependent indenting add 'indent' as well.
 filetype plugin on
 filetype indent on
 autocmd Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/
 autocmd BufReadPost * if line("'\"") > 0 && line ("'\"") <= line("$") | exe "normal g'\"" | endif " Retore last edit location when opening a file
endif " has ("autocmd")

" We know xterm-debian is a color terminal
if &term =~ "xterm-debian" || &term =~ "xterm-xfree86"
  set t_Co=16
  set t_Sf=^[[3%dm
  set t_Sb=^[[4%dm
endif

" My pinky finger is never fast enough.
command W w
command Q q
command Wq wq
